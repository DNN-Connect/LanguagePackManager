/******* SPROCS *******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_LPM_GetLastEditTime') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}Connect_LPM_GetLastEditTime
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_LPM_GetPack') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}Connect_LPM_GetPack
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_LPM_GetStats') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}Connect_LPM_GetStats
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_LPM_InsertMissingPackageVersionLocaleTextCounts') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}Connect_LPM_InsertMissingPackageVersionLocaleTextCounts
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_LPM_RefreshLocaleTextCount') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}Connect_LPM_RefreshLocaleTextCount
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_LPM_RefreshNrOriginalTexts') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}Connect_LPM_RefreshNrOriginalTexts
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_LPM_RefreshNrTexts') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}Connect_LPM_RefreshNrTexts
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_LPM_SetTranslation') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}Connect_LPM_SetTranslation
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}{objectQualifier}Connect_LPM_UpdatePackageVersionLocaleTextCounts') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}{objectQualifier}Connect_LPM_UpdatePackageVersionLocaleTextCounts
GO

/******* VIEWS AND FUNCTIONS *******/
DROP VIEW IF EXISTS {databaseOwner}{objectQualifier}vw_Connect_LPM_Translations
GO

DROP VIEW IF EXISTS {databaseOwner}{objectQualifier}vw_Connect_LPM_Texts
GO

DROP VIEW IF EXISTS {databaseOwner}{objectQualifier}vw_Connect_LPM_PackageVersions
GO

DROP VIEW IF EXISTS {databaseOwner}{objectQualifier}vw_Connect_LPM_PackageVersionLocaleTextCounts
GO

DROP VIEW IF EXISTS {databaseOwner}{objectQualifier}vw_Connect_LPM_Packages
GO

DROP VIEW IF EXISTS {databaseOwner}{objectQualifier}vw_Connect_LPM_PackageLinks
GO

/******* TRIGGERS *******/
/******* TYPES *******/
IF  EXISTS (SELECT * FROM sys.types st JOIN {objectQualifier}sys.schemas ss ON st.schema_id = ss.schema_id WHERE st.name = N'{objectQualifier}Connect_LPM_GetStatsLocales' AND ss.name = N'dbo')
DROP TYPE {databaseOwner}{objectQualifier}Connect_LPM_GetStatsLocales
GO

IF  EXISTS (SELECT * FROM sys.types st JOIN {objectQualifier}sys.schemas ss ON st.schema_id = ss.schema_id WHERE st.name = N'{objectQualifier}Connect_LPM_GetStatsPackages' AND ss.name = N'dbo')
DROP TYPE {databaseOwner}{objectQualifier}Connect_LPM_GetStatsPackages
GO

/******* TYPES *******/
CREATE TYPE {databaseOwner}{objectQualifier}Connect_LPM_GetStatsLocales AS TABLE(
 [LocaleCode] [varchar](10) NULL,
 [GenericCode] [varchar](10) NULL
)
GO

CREATE TYPE {databaseOwner}{objectQualifier}Connect_LPM_GetStatsPackages AS TABLE(
 [PackageName] [nvarchar](128) NULL,
 [Version] [varchar](15) NULL
)
GO

/******* TRIGGERS *******/
/******* VIEWS AND FUNCTIONS *******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW {databaseOwner}{objectQualifier}vw_Connect_LPM_PackageLinks
AS
SELECT
 pl.*,
 m.PortalID,
 cu.DisplayName CreatedByUser,
 mu.DisplayName ModifiedByUser
FROM {databaseOwner}{objectQualifier}Connect_LPM_PackageLinks pl
INNER JOIN {databaseOwner}{objectQualifier}Modules m ON m.ModuleID=pl.ModuleId
LEFT JOIN {databaseOwner}{objectQualifier}Users cu ON cu.UserID=pl.CreatedByUserID
LEFT JOIN {databaseOwner}{objectQualifier}Users mu ON mu.UserID=pl.LastModifiedByUserID
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW {databaseOwner}{objectQualifier}vw_Connect_LPM_Packages
AS
SELECT
 p.*,
 pl.Name,
 pl.IsResourcesRepo,
 pl.LastChecked,
 pl.ModuleId,
 m.PortalID
FROM {databaseOwner}{objectQualifier}Connect_LPM_Packages p
INNER JOIN {databaseOwner}{objectQualifier}Connect_LPM_PackageLinks pl ON pl.PackageLinkId=p.LinkId
INNER JOIN {databaseOwner}{objectQualifier}Modules m ON m.ModuleID=pl.ModuleId
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW {databaseOwner}{objectQualifier}vw_Connect_LPM_PackageVersionLocaleTextCounts
AS
SELECT
tc.*,
pv.NrTexts OriginalNr,
pv.PackageId
FROM {databaseOwner}{objectQualifier}Connect_LPM_PackageVersionLocaleTextCounts tc
INNER JOIN {databaseOwner}{objectQualifier}Connect_LPM_PackageVersions pv ON pv.PackageVersionId=tc.PackageVersionId
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW {databaseOwner}{objectQualifier}vw_Connect_LPM_PackageVersions
AS
SELECT
 pv.*,
 p.PackageName,
 p.FriendlyName,
 p.PackageType,
 pl.Name PackageLinkName,
 pl.LastChecked,
 pl.ModuleId,
 m.PortalID
FROM {databaseOwner}{objectQualifier}Connect_LPM_PackageVersions pv
INNER JOIN {databaseOwner}{objectQualifier}Connect_LPM_Packages p ON p.PackageId=pv.PackageId
INNER JOIN {databaseOwner}{objectQualifier}Connect_LPM_PackageLinks pl ON pl.PackageLinkId=p.LinkId
INNER JOIN {databaseOwner}{objectQualifier}Modules m ON m.ModuleID=pl.ModuleId
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW {databaseOwner}{objectQualifier}vw_Connect_LPM_Texts
AS
SELECT
 t.*,
 rf.FilePath,
 pv.PackageId,
 pv.Version FirstInVersion,
 ISNULL(pve.Version, '99.99.99') DeprecatedInVersion
FROM {databaseOwner}{objectQualifier}Connect_LPM_Texts t
INNER JOIN {databaseOwner}{objectQualifier}Connect_LPM_PackageVersions pv ON pv.PackageVersionId=t.PackageVersionId
LEFT JOIN {databaseOwner}{objectQualifier}Connect_LPM_PackageVersions pve ON pve.PackageVersionId=t.DeprecatedInVersionId
INNER JOIN {databaseOwner}{objectQualifier}Connect_LPM_ResourceFiles rf ON rf.ResourceFileId=t.ResourceFileId
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW {databaseOwner}{objectQualifier}vw_Connect_LPM_Translations
AS
SELECT
 pv.PackageId,
 tr.*,
 rf.FilePath,
 t.TextKey,
 pv.Version FirstInVersion,
 ISNULL(pve.Version, '99.99.99') DeprecatedInVersion,
 cu.DisplayName CreatedByUser,
 mu.DisplayName ModifiedByUser
FROM {databaseOwner}{objectQualifier}Connect_LPM_Translations tr
INNER JOIN {databaseOwner}{objectQualifier}Connect_LPM_Texts t ON t.TextId=tr.TextId
INNER JOIN {databaseOwner}{objectQualifier}Connect_LPM_PackageVersions pv ON pv.PackageVersionId=t.PackageVersionId
INNER JOIN {databaseOwner}{objectQualifier}Connect_LPM_ResourceFiles rf ON rf.ResourceFileId=t.ResourceFileId
LEFT JOIN {databaseOwner}{objectQualifier}Connect_LPM_PackageVersions pve ON pve.PackageVersionId=t.DeprecatedInVersionId
LEFT JOIN {databaseOwner}{objectQualifier}Users cu ON cu.UserID=tr.CreatedByUserID
LEFT JOIN {databaseOwner}{objectQualifier}Users mu ON mu.UserID=tr.LastModifiedByUserID
GO

/******* SPROCS *******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}Connect_LPM_GetLastEditTime
@PackageId INT,
@Version VARCHAR(10),
@LocaleMain INT,
@LocaleSpecific INT
AS
SELECT TOP 1
 t.LastModifiedOnDate
FROM {databaseOwner}{objectQualifier}vw_Connect_LPM_Translations t
WHERE t.PackageId=@PackageId
AND t.FirstInVersion <= @Version 
AND @Version < t.DeprecatedInVersion
AND (t.Locale=@LocaleMain OR t.Locale=@LocaleSpecific)
ORDER BY t.LastModifiedOnDate DESC
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}Connect_LPM_GetPack
@PackageId INT,
@Version VARCHAR(10),
@LocaleGeneric INT,
@LocaleSpecific INT
AS
SELECT
*
FROM
(SELECT
 txt.FilePath,
 txt.TextKey,
 ISNULL(trs.TextValue, trg.TextValue) TextValue
FROM {databaseOwner}{objectQualifier}vw_Connect_LPM_Texts txt
LEFT JOIN {databaseOwner}{objectQualifier}Connect_LPM_Translations trg ON trg.TextId=txt.TextId AND trg.Locale=@LocaleGeneric
LEFT JOIN {databaseOwner}{objectQualifier}Connect_LPM_Translations trs ON trs.TextId=txt.TextId AND trs.Locale=@LocaleSpecific
WHERE txt.PackageId=@PackageId
AND txt.FirstInVersion <= @Version 
AND @Version < txt.DeprecatedInVersion) x
WHERE NOT x.TextValue IS NULL
ORDER BY FilePath, TextKey
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC {databaseOwner}{objectQualifier}Connect_LPM_GetStats
 @PortalId INT,
 @Packages {databaseOwner}{objectQualifier}Connect_LPM_GetStatsPackages READONLY,
 @Locales {databaseOwner}{objectQualifier}Connect_LPM_GetStatsLocales READONLY
AS
DECLARE @TempTable TABLE 
(
   PackageName nvarchar(128),
   Version varchar(15),
   Code varchar(10),
   TotalTexts int,
   NrTexts int,
   LastChange DATETIME
);
INSERT INTO @TempTable
SELECT
 p.PackageName,
 pv.Version,
 locs.Code,
 pv.NrTexts TotalTexts,
 x.NrTexts,
 x.LastChange
FROM {databaseOwner}{objectQualifier}Connect_LPM_PackageVersionLocaleTextCounts x
INNER JOIN {databaseOwner}{objectQualifier}Connect_LPM_PackageVersions pv ON pv.PackageVersionId=x.PackageVersionId
INNER JOIN {databaseOwner}{objectQualifier}Connect_LPM_Packages p ON p.PackageId=pv.PackageId
INNER JOIN {databaseOwner}{objectQualifier}Connect_LPM_PackageLinks pl ON pl.PackageLinkId=p.LinkId
INNER JOIN {databaseOwner}{objectQualifier}Modules m ON m.ModuleID=pl.ModuleId
INNER JOIN @Packages paramp ON paramp.PackageName=p.PackageName AND paramp.Version = pv.Version
INNER JOIN (SELECT l1.*
FROM {databaseOwner}{objectQualifier}Connect_LPM_Locales l1
INNER JOIN @Locales paraml ON paraml.LocaleCode=l1.Code OR paraml.GenericCode=l1.Code) locs ON locs.LocaleId=x.LocaleId
WHERE m.PortalID=@PortalId;
SELECT
 t.*
FROM @TempTable t
LEFT JOIN @TempTable t2 ON t2.PackageName=t.PackageName
  AND t2.Version=t.Version
  AND LEN(t2.Code)>LEN(t.Code)
  AND CHARINDEX(t.Code, t2.Code) = 1
WHERE t2.Code IS NULL;
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}Connect_LPM_InsertMissingPackageVersionLocaleTextCounts
AS
INSERT INTO {databaseOwner}{objectQualifier}Connect_LPM_PackageVersionLocaleTextCounts
([PackageVersionId]
,[LocaleId]
,[NrTexts]
,[LastChange])
SELECT
 pv.PackageVersionId,
 tr.Locale,
 -1,
 MAX(tr.LastModifiedOnDate) LastModifiedOnDate
FROM {databaseOwner}{objectQualifier}Connect_LPM_Translations tr
INNER JOIN {databaseOwner}{objectQualifier}Connect_LPM_Texts t ON t.TextId=tr.TextId
INNER JOIN {databaseOwner}{objectQualifier}Connect_LPM_ResourceFiles rf on rf.ResourceFileId=t.ResourceFileId
INNER JOIN {databaseOwner}{objectQualifier}Connect_LPM_Packages p ON rf.PackageId=p.PackageId
INNER JOIN {databaseOwner}{objectQualifier}Connect_LPM_PackageVersions pv ON p.PackageId=pv.PackageId
LEFT JOIN {databaseOwner}{objectQualifier}Connect_LPM_PackageVersionLocaleTextCounts x2 
  ON x2.PackageVersionId=pv.PackageVersionId
  AND x2.LocaleId=tr.Locale
GROUP BY tr.Locale, pv.PackageVersionId, x2.PackageVersionId
HAVING x2.PackageVersionId IS NULL;
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}Connect_LPM_RefreshLocaleTextCount
@LocaleId INT
AS
DELETE FROM {databaseOwner}{objectQualifier}Connect_LPM_PackageVersionLocaleTextCounts
WHERE LocaleId=@LocaleId;
INSERT INTO {databaseOwner}{objectQualifier}Connect_LPM_PackageVersionLocaleTextCounts
    ([PackageVersionId]
    ,[LocaleId]
    ,[NrTexts])
SELECT
pv.PackageVersionId,
loc.LocaleId,
(SELECT COUNT(txt.TextId)
FROM {databaseOwner}{objectQualifier}vw_Connect_LPM_Texts txt
LEFT JOIN {databaseOwner}{objectQualifier}Connect_LPM_Translations trg ON txt.TextId=trg.TextId AND trg.Locale=loc.GenericLocaleId
LEFT JOIN {databaseOwner}{objectQualifier}Connect_LPM_Translations trs ON txt.TextId=trs.TextId AND trs.Locale=loc.LocaleId
WHERE txt.PackageId=pv.PackageId
AND txt.FirstInVersion <= pv.Version
AND pv.Version < txt.DeprecatedInVersion
AND NOT ISNULL(trg.TextValue, trs.TextValue) IS NULL) NrTexts
FROM {databaseOwner}{objectQualifier}vw_Connect_LPM_PackageVersions pv
INNER JOIN {databaseOwner}{objectQualifier}Connect_LPM_Locales loc ON loc.LocaleId=@LocaleId;
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}Connect_LPM_RefreshNrOriginalTexts
 @PackageId INT
AS
-- update the original nr of texts
UPDATE {databaseOwner}{objectQualifier}Connect_LPM_PackageVersions
SET NrTexts=x.NrTexts
FROM {databaseOwner}{objectQualifier}Connect_LPM_PackageVersions pv1
INNER JOIN
(SELECT
pv.PackageVersionId,
(SELECT COUNT(txt.TextId)
FROM {databaseOwner}{objectQualifier}vw_Connect_LPM_Texts txt
WHERE txt.PackageId=pv.PackageId
AND txt.FirstInVersion <= pv.Version
AND pv.Version < txt.DeprecatedInVersion) NrTexts
FROM {databaseOwner}{objectQualifier}vw_Connect_LPM_PackageVersions pv) x ON x.PackageVersionId=pv1.PackageVersionId
WHERE (pv1.PackageId=@PackageId OR @PackageId=-1);
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}Connect_LPM_RefreshNrTexts
AS
-- update the original nr of texts
EXEC {databaseOwner}{objectQualifier}Connect_LPM_RefreshNrOriginalTexts -1;
-- refresh translation counts
DELETE FROM {databaseOwner}{objectQualifier}Connect_LPM_PackageVersionLocaleTextCounts;
-- first get a list of available translations
EXEC {databaseOwner}{objectQualifier}Connect_LPM_InsertMissingPackageVersionLocaleTextCounts;
-- now get the nr texts
EXEC {databaseOwner}{objectQualifier}Connect_LPM_UpdatePackageVersionLocaleTextCounts;
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}Connect_LPM_SetTranslation
 @TextId INT,
 @Locale INT,
 @TextValue NVARCHAR(MAX),
 @UserId INT
AS
IF EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}Connect_LPM_Translations WHERE TextId=@TextId AND Locale=@Locale)
BEGIN
 IF NOT EXISTS (SELECT * FROM {databaseOwner}{objectQualifier}Connect_LPM_Translations WHERE TextId=@TextId AND Locale=@Locale AND TextValue=@TextValue)
  UPDATE {databaseOwner}{objectQualifier}Connect_LPM_Translations
  SET TextValue=@TextValue, LastModifiedByUserID=@UserId, LastModifiedOnDate=GETDATE()
  WHERE TextId=@TextId AND Locale=@Locale
END
ELSE
BEGIN
INSERT INTO {databaseOwner}{objectQualifier}Connect_LPM_Translations
    ([TextId]
    ,[Locale]
    ,[TextValue]
    ,[CreatedByUserID]
    ,[CreatedOnDate]
    ,[LastModifiedByUserID]
    ,[LastModifiedOnDate])
VALUES
 (@TextId, @Locale, @TextValue, @UserId, GETDATE(), @UserId, GETDATE())
END
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE {databaseOwner}{objectQualifier}Connect_LPM_UpdatePackageVersionLocaleTextCounts
AS
UPDATE {databaseOwner}{objectQualifier}Connect_LPM_PackageVersionLocaleTextCounts
SET NrTexts = (SELECT COUNT(txt.TextId)
FROM {databaseOwner}{objectQualifier}vw_Connect_LPM_Texts txt
LEFT JOIN {databaseOwner}{objectQualifier}Connect_LPM_Translations trg ON txt.TextId=trg.TextId AND trg.Locale=loc.GenericLocaleId
LEFT JOIN {databaseOwner}{objectQualifier}Connect_LPM_Translations trs ON txt.TextId=trs.TextId AND trs.Locale=loc.LocaleId
WHERE txt.PackageId=pv.PackageId
AND txt.FirstInVersion <= pv.Version
AND pv.Version < txt.DeprecatedInVersion
AND NOT ISNULL(trg.TextValue, trs.TextValue) IS NULL)
FROM {databaseOwner}{objectQualifier}Connect_LPM_PackageVersionLocaleTextCounts x
INNER JOIN {databaseOwner}{objectQualifier}Connect_LPM_PackageVersions pv ON pv.PackageVersionId=x.PackageVersionId
INNER JOIN {databaseOwner}{objectQualifier}Connect_LPM_Locales loc on loc.LocaleId=x.LocaleId
WHERE x.NrTexts=-1;
GO

